import{_ as a}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as n,f as e}from"./app-88b013ff.js";const p={},t=e(`<p>分享记录一些实用的 js 简写技巧，可以让代码看起来更加简洁优雅</p><h2 id="逻辑运算符" tabindex="-1"><a class="header-anchor" href="#逻辑运算符" aria-hidden="true">#</a> 逻辑运算符 (||)</h2><p>如果前面的值是 0 &#39;&#39; false null undefined NaN 其中的任意一种，则直接返回后面的值</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> b <span class="token operator">=</span> a <span class="token operator">||</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// 1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="空值合并操作符" tabindex="-1"><a class="header-anchor" href="#空值合并操作符" aria-hidden="true">#</a> 空值合并操作符 (??)</h2><p>如果没有定义左侧返回右侧。如果是，则返回左侧</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> b <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> c <span class="token operator">=</span> a <span class="token operator">??</span> b<span class="token punctuation">;</span> <span class="token comment">// 1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="防止崩溃的可选链" tabindex="-1"><a class="header-anchor" href="#防止崩溃的可选链" aria-hidden="true">#</a> 防止崩溃的可选链 (?.)</h2><p>判断对象的某个属性是否存在，如果存在那么就返回整个属性的值，否则返回 undefined</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;小明&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">cat</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;萌萌&quot;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> b <span class="token operator">=</span> a<span class="token punctuation">.</span>dog<span class="token operator">?.</span>name<span class="token punctuation">;</span> <span class="token comment">// undefined</span>
<span class="token keyword">let</span> c <span class="token operator">=</span> a<span class="token punctuation">.</span>cat<span class="token operator">?.</span>name<span class="token punctuation">;</span> <span class="token comment">//萌萌</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="转换-boolean-类型操作符" tabindex="-1"><a class="header-anchor" href="#转换-boolean-类型操作符" aria-hidden="true">#</a> 转换 boolean 类型操作符 (!!)</h2><p>将类型转换成 boolean 类型，类型判断同||</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> b <span class="token operator">=</span> <span class="token operator">!</span><span class="token operator">!</span>a<span class="token punctuation">;</span> <span class="token comment">// false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,13),o=[t];function c(l,r){return s(),n("div",null,o)}const u=a(p,[["render",c],["__file","常用js简写技巧.html.vue"]]);export{u as default};
